/*
 * Copyright (c) 2009 Xilinx, Inc.  All rights reserved.
 *
 * Xilinx, Inc.
 * XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION "AS IS" AS A
 * COURTESY TO YOU.  BY PROVIDING THIS DESIGN, CODE, OR INFORMATION AS
 * ONE POSSIBLE   IMPLEMENTATION OF THIS FEATURE, APPLICATION OR
 * STANDARD, XILINX IS MAKING NO REPRESENTATION THAT THIS IMPLEMENTATION
 * IS FREE FROM ANY CLAIMS OF INFRINGEMENT, AND YOU ARE RESPONSIBLE
 * FOR OBTAINING ANY RIGHTS YOU MAY REQUIRE FOR YOUR IMPLEMENTATION.
 * XILINX EXPRESSLY DISCLAIMS ANY WARRANTY WHATSOEVER WITH RESPECT TO
 * THE ADEQUACY OF THE IMPLEMENTATION, INCLUDING BUT NOT LIMITED TO
 * ANY WARRANTIES OR REPRESENTATIONS THAT THIS IMPLEMENTATION IS FREE
 * FROM CLAIMS OF INFRINGEMENT, IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 */

/*
 * helloworld.c: simple test application
 */

#include <stdio.h>
#include "platform.h"
#include "xparameters.h"
#include "xiomodule.h"

void print(char *str);

int main()
{
    init_platform();

    u8 data;

    u8 sw,prevState;
    XIOModule gpi;
    XIOModule gpo;

    print("\n\rMT9V034 controller and AL422B FIFO reader\n\r");

    sw = XIOModule_Initialize(&gpi, XPAR_IOMODULE_0_DEVICE_ID);
    sw = XIOModule_Start(&gpi);

    data = XIOModule_Initialize(&gpo, XPAR_IOMODULE_0_DEVICE_ID);
    data = XIOModule_Start(&gpo);

    while(1)
    {
    	sw = XIOModule_DiscreteRead(&gpi,2);

    	if (prevState != sw)
    		if(sw == 1){
    			print("Reading from FIFO...\n\r");
    			XIOModule_DiscreteWrite(&gpo,1,0x1);
    		}else{
    			XIOModule_DiscreteWrite(&gpo,1,0x0)
    		}
    	prevState = sw;
    }
    cleanup_platform();

    return 0;
}
